%!PS-Adobe-2.0
%%Creator: dvips(k) 5.992 Copyright 2012 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Mon Mar 10 17:21:17 2014
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFRM1200 Helvetica
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips main.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.03.10:1721
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: cm-super-t2a.enc 0 0
% This file is generated from `T2Auni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T2AEncoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/uni04C0
/angleleft
/angleright
% 0x10
/quotedblleft
/quotedblright
/cyrflex
/dblgrave
/cyrbreve
/endash
/emdash.cyr % CYRILLIC EM DASH
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/afii10050
/uni0492
/afii10051
/afii10060
/uni04BA
/uni0496
/uni0498
/afii10058
/afii10056
/uni049A
/uni04A0
/uni049C
/uni04D4
/uni04A2
/uni04A4
/afii10054
% 0x90
/uni04E8
/uni04AA
/afii10062
/uni04AE
/uni04B0
/uni04B2
/afii10145
/uni04B8
/uni04B6
/afii10053
/uni04D8
/afii10059
/afii10023
/afii61352
/currency
/section
% 0xA0
/afii10098
/uni0493
/afii10099
/afii10108
/uni04BB
/uni0497
/uni0499
/afii10106
/afii10104
/uni049B
/uni04A1
/uni049D
/uni04D5
/uni04A3
/uni04A5
/afii10102
% 0xB0
/uni04E9
/uni04AB
/afii10110
/uni04AF
/uni04B1
/uni04B3
/afii10193
/uni04B9
/uni04B7
/afii10101
/afii10846
/afii10107
/afii10071
/quotedblbase
/guillemotleft.cyr
/guillemotright.cyr
% 0xC0
/afii10017
/afii10018
/afii10019
/afii10020
/afii10021
/afii10022
/afii10024
/afii10025
/afii10026
/afii10027
/afii10028
/afii10029
/afii10030
/afii10031
/afii10032
/afii10033
% 0xD0
/afii10034
/afii10035
/afii10036
/afii10037
/afii10038
/afii10039
/afii10040
/afii10041
/afii10042
/afii10043
/afii10044
/afii10045
/afii10046
/afii10047
/afii10048
/afii10049
% 0xE0
/afii10065
/afii10066
/afii10067
/afii10068
/afii10069
/afii10070
/afii10072
/afii10073
/afii10074
/afii10075
/afii10076
/afii10077
/afii10078
/afii10079
/afii10080
/afii10081
% 0xF0
/afii10082
/afii10083
/afii10084
/afii10085
/afii10086
/afii10087
/afii10088
/afii10089
/afii10090
/afii10091
/afii10092
/afii10093
/afii10094
/afii10095
/afii10096
/afii10097
] def

%%EndProcSet
%%BeginProcSet: groff.enc 0 0
%!PS-Adobe-3.0 Resource-Encoding
%
% @psencodingfile{
%   author = "Werner Lemberg, Michail Vidiassov",
%   version = "1.0",
%   date = "2006-Feb-03",
%   filename = "groff.enc",
%   license = "public domain",
%   email = "groff@gnu.org",
%   docstring = "Groff default text encoding.  Used with MetaPost."
% }

%%BeginResource: encoding groffEncoding
/groffEncoding [
% 0x00 | 0
  /asciicircum     /asciitilde        /Scaron            /Zcaron
  /scaron          /zcaron            /Ydieresis         /trademark
  /quotesingle     /Euro              /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
% 0x10 | 16
  /.notdef         /.notdef           /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
  /.notdef         /.notdef           /.notdef           /.notdef
% 0x20 | 32
  /space           /exclam            /quotedbl          /numbersign
  /dollar          /percent           /ampersand         /quoteright
  /parenleft       /parenright        /asterisk          /plus
  /comma           /hyphen            /period            /slash
% 0x30 | 48
  /zero            /one               /two               /three
  /four            /five              /six               /seven
  /eight           /nine              /colon             /semicolon
  /less            /equal             /greater           /question
% 0x40 | 64
  /at              /A                 /B                 /C
  /D               /E                 /F                 /G
  /H               /I                 /J                 /K
  /L               /M                 /N                 /O
% 0x50 | 80
  /P               /Q                 /R                 /S
  /T               /U                 /V                 /W
  /X               /Y                 /Z                 /bracketleft
  /backslash       /bracketright      /circumflex        /underscore
% 0x60 | 96
  /quoteleft       /a                 /b                 /c
  /d               /e                 /f                 /g
  /h               /i                 /j                 /k
  /l               /m                 /n                 /o
% 0x70 | 112
  /p               /q                 /r                 /s
  /t               /u                 /v                 /w
  /x               /y                 /z                 /braceleft
  /bar             /braceright        /tilde             /.notdef
% 0x80 | 128
  /quotesinglbase  /guillemotleft     /guillemotright    /bullet
  /florin          /fraction          /perthousand       /dagger
  /daggerdbl       /endash            /emdash            /ff
  /fi              /fl                /ffi               /ffl
% 0x90 | 144
  /dotlessi        /dotlessj          /grave             /hungarumlaut
  /dotaccent       /breve             /caron             /ring
  /ogonek          /quotedblleft      /quotedblright     /oe
  /lslash          /quotedblbase      /OE                /Lslash
% 0xA0 | 160
  /.notdef         /exclamdown        /cent              /sterling
  /currency        /yen               /brokenbar         /section
  /dieresis        /copyright         /ordfeminine       /guilsinglleft
  /logicalnot      /minus             /registered        /macron
% 0xB0 | 176
  /degree          /plusminus         /twosuperior       /threesuperior
  /acute           /mu                /paragraph         /periodcentered
  /cedilla         /onesuperior       /ordmasculine      /guilsinglright
  /onequarter      /onehalf           /threequarters     /questiondown
% 0xC0 | 192
  /Agrave          /Aacute            /Acircumflex       /Atilde
  /Adieresis       /Aring             /AE                /Ccedilla
  /Egrave          /Eacute            /Ecircumflex       /Edieresis
  /Igrave          /Iacute            /Icircumflex       /Idieresis
% 0xD0 | 208
  /Eth             /Ntilde            /Ograve            /Oacute
  /Ocircumflex     /Otilde            /Odieresis         /multiply
  /Oslash          /Ugrave            /Uacute            /Ucircumflex
  /Udieresis       /Yacute            /Thorn             /germandbls
% 0xE0 | 224
  /agrave          /aacute            /acircumflex       /atilde
  /adieresis       /aring             /ae                /ccedilla
  /egrave          /eacute            /ecircumflex       /edieresis
  /igrave          /iacute            /icircumflex       /idieresis
% 0xF0 | 240
  /eth             /ntilde            /ograve            /oacute
  /ocircumflex     /otilde            /odieresis         /divide
  /oslash          /ugrave            /uacute            /ucircumflex
  /udieresis       /yacute            /thorn             /ydieresis
] def
%%EndResource

% eof

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF94B2671AF5F8EDF30736B7C6A9B3D97AF
81AEB6705EFC092EC9AFDAEDC7A9802A64BB00B7EFE75E9FFBCA021616D05B2B
4EE62123E39A5A22133EA84125390D933B7FA0282CF9877B6EEE93809A2B0BFB
7047C4BC5AC36C9EE0879BBB0F4C03FB3C751EBE60734D56ABBA9923561D921D
B1E246059AB1B9200E56880907BDBE4D2D14A7E9F673199F1EE65BA3645E75E9
90354A20B5A96530F146501A3337E32221BAB5BE4D0A063D6DEE09D0323E348F
58FAAD4A00C460609C209C29BECA1E66C9860CB5CC2DD64BDF04F9DBCD2FBA1F
CE95A66825C40ED537A9C462397972976FB069377831EBC8ADB42128A2F9590F
7B7E946D1C63FCBD0D72C8020F8DB32F5ACD29421BADEC43FBE71666E69EA4C2
5ABEAC6DB8DDA112B42F02C355FE14B475F24AB6974E13D88C6088B10D612545
8E11A0373883394BA9DFCDDB21BB9E9D6CB0B83C00284F0663CCCF61AEEAB476
C7A62B12D0285C3F4521AFA65F47605D45E4BF6F85FB82236248C6E2A60BD3A3
7312AECAEDF8B970145313E5AB466B3679D0A6ACA5A13D4D305E045D41041399
3ABE49395782E68839A71788F1DF272E0D026B7E87234F09C3FC8E2E3E29D00D
89E9D11F680B3067FD35844C73CB15DB4AB762939817F355C5BF5E586A8D7B28
290136D7F43073AD57897BE049996FB49464F74D0605FF377C5F5310F32B3053
445B68687E62AB58DB1369A27B990308C7C17E58958D6492C0CE40E92CAA28AB
52F38357AEF4D7A73768DC0A69C1BE7493CB2F491ED94B4CDB4B53D025D85956
56ACDAFA94C60B1DC71F07DA814EE5E5AE2C53080E5FE5C96CC937A545AD444F
E5BD50E3EC120210CA12FCD58B9A38ABEDB051C4F8D647A01DD0BA4378DC13FD
7748A8A033AD88D8FC5FCE1FFD439BE322CDB13A23CE0E21C27DC30A32FCCDB5
DBE03413A9334659FB1E2F204954D108F79DCCC296009E826E0A3705BB96D6E7
F5A88F2C3F14B42E6CE14F978BDF715A0647DB52992DE617DE4E577DBF10055E
EE37F31F578FA818A1BEA040955555E76B3CC7BF5AC19769600CE8EEF2473FFD
63B302B915FF910E63CCEFA499B70B53E4C056DD53F8E257E41974B90F069F94
55F8AD9B6D7947EFF8372583DD596348463CCE63E99AF4D9A170487825E981A7
65BA2F5F259FCCF5FC820B9C42B4E8FD0BEFA7332333C9056CEBEFB92C58BCCF
98F8D73B69B5A25003389610B1450E2942755180793F7177BD08D7EC08E1CA72
65AB91AA9A09552C199935A5442C42546203F684F758FCABEA3D522D1EDFFA0A
7B7FC7036812216BD5B7506DAF8928F2AD6B7D90F34708FDB80E13686ABBE6D3
0D90247E2FDC407FF8B758848E0DCB2272D32FF4B0A6B2D3D7EF27097E12DE4F
6AF5D872AAAA47A65D3697F779D9B31631803F1817185E95A7C5FE21FD88D1FF
50F04EF8E9AB73CAB5CAB7DC9C6B19FE345FCF8F1E35448577F92A3A5681E354
46D145400AA4DE5BF8BE153410B06E9F990B9FCD99447E0C516F2A29690B6E6D
B809270BDC40CB9AB1679DD62E02DF25B98EF3FC661275B66BBF30C5B9E462B7
91C6FB6DCD1B73300A2911E1BDEC5AB02BD1D130AF04E8DB2C197CD2A32254E2
0A8B3A9C08FCFEF55C2AE6E09BAAFB009598671FD3DB732FF260BFA10DC69F52
0D7DF35DE48432BBAB90845D7B9CE2D18615AECFB0BC29C36A23FC475E0F7B50
A348BD2987A45AE742EEE6F30D7F4F35D7019C0DFB0D8E059A9BF111636F50CC
2D533593759930EA2C150EE2322BFAA89EC25C9F7D6B56D0EAAF82CAA8346020
CCB2FDFB0B90FF0AE61CFD81C3BF9AA6A878764E455181F1B1B613ED40985ABD
6D0A50131FF37D834FA3F947423EBAC360D81B7DC39FEF8B47E94404DC3EECC3
82B721198B794C2EE61C6E4E61A674030D365614233B46A65CDC7267C6930585
0D4CC2810636D594C604439FB2BD9E9CC3F7FCF5CCEBBD7DF394EC6E04FE0571
B7E28904507F648221B8CE115118A04D86FE7B53D82AC7FD78224D6F1FCC641E
9CC3DF6FB8D35C1AF0462B9837BC42208225B16B24514A96DCF76F7B9C4E3A8B
E1674B1AB34845B32A382580DD5A9A084D2623610EA1CA35C6664508C68EB32E
7F70A371B66E5D14FE009A6D38BA576A5FCEC8C47AECE21354661F1C85E15E92
4DE72290D5C70FDA3EE2B1E5B99140880764110C5154A78244202C4DC3D08348
79823E8110978AA4F2CBBB332B7A33146C5A181C0C4119D17C560CD0AEDCDD41
B4855AD6A21A0591D089623EC706989CB6519341221AC2D6BA7DA12E95E187C5
8C41C8DB4A0DD08D8D1FE2DDF71C2D450A5B777BE0784EE5F626C058EF5A2070
5436FE0658EE9CA27A82A0614B44268DC40E2FDC1551966A7BC9F9AD02345108
910180E7A56062181F78A6833F5D32986352549A3BA2799EF97B8D214B72FC1A
BC392D62B3240677F64889D705BC412019B9BFAAC5D56F0C7274518154C175FF
AC512364DF9BB709D9B7F9F720A49F4B92D04D91D99C5928D8B3FEDC85A3A232
6A954F6EEFAACB711CD41A199C054091893AF67C145553F823B80B006876DC67
F7E03D901EFA90DFD8EDE2EB16458E2ABCD6661A79562E67613F274EE63C0FE9
FB37A14E20628D29C78F4584800D32F62CBE183CD9BC8FDA3DD9119417CD8091
AD6BD4A98F99645E723036B2F085D0FEA327DFF5132DBC3EDB56BCBF639EBF57
81375F74F86A8208891B65A03BAE4891D532D0F25A4455CB3378E17157F1015F
0B21F93B115D445AE37439F9DC97A8BB577FCEF162734BC08592E82C90BB1A0A
4065DFFD3D85646D94321F4C391393FDF4F8916FEDF68C44148B8946C6FC554A
D11BEEC66DAB9F2AB8B6C05B27333C03650971AA39FBBE88FCB9BCD2AD4AC876
7A0761746A26179496A1755CAE67E7C3515EDEE804B3B51DD1C01E201AD6F520
333A9B79D37331AE3BEC8BA231DE2D0658B16BD2AF0C476F7DE501E27938FA67
4DF47E8D2D065AA21A9798A12004BB928CB1E674502405068B025F00B51F8F4F
025472CEA957529478DDB3F4CC616C3132924E1C6F28DEAEFBF213FD9FB2DF7C
1E52F523C2D6CF25CB70A5A0EAC23087A1423D6C1224EE53A31A053274593CA9
C6880C164D0001737F9242609AC50B5D8EF292B31A171E129FD3D862F264EC92
7F746722C239DE7285F1C1C726F2A3B2C1D801A8EA2A6F546025251CAF7C2140
FF6FDFC51331159CB693B5C41863798F81755DE0C72567F580998F9E08DF927E
F2D53CEA3451101DF1BA781A06B58C38C7EABAB754882E2D3F9095D5FE2EC20F
F1E7B743AC68ABC895597A452DA716B05A6717BF76A943D9AADB427BD76D0497
8EF488CDBC4CEC361178D68FE73154A62141A817B36E583286A811C85C8416CA
7B5E02591593A36020A3B4937580A96D0B1E140095E8407B7C5B69BF26656762
A25FE0464CBD7A0A648FEE9869A5D024061813A413A9FFE1D423EB03235FB9C6
9EE955D8FB17FDB11D140B85466795D6508621C07AEC1C33CC62858388C0C2F0
B6392EDBB6DA55F1F20E770CECA520CCBDCC387BE1304D3B4D3A16CEB6722D4B
750D3807662AE5F13EC903E8852EADE854753B0C69945872732C0572661095BD
8CADC24B14EE5388592BD478B2CDA73B1CE322FFA3082A2207ADADE56F84C54D
1D769B87D46A303CE0EAC23EB789A64FA7D21191640BBE5DA16B92FA3C3BA894
75C165D705E525A96E000A3077768E0D7738E412BDF3E021E72C1CBA4328B9E8
6E1BAFC224C7D181E139C5C9617EC85B0149324F55578C9C7FC5DD1953CF3116
849EB440CC767E82F306CBF79B11A249E1B9C1772CA11C714C102C7BC2FC5396
FEE1EBBF156308B642300695974667E49904EB3499AC0AFC3D76460ABDCA18A2
D8A844B5D92E1CA5018CE44EA4B3414BECE1467958FA51A5339C10FB6DFC64AD
4890878C5B7272BBAC052525350CAA38D2FB319A52EEEDF0F5F458F506DF534D
D56168A34F5850033CD5F4E11628AACC6EDC13C11B8D1A9F741F1C40D357CF46
30634EBD9B202AF89E49F5271B585DF66BE8EEF3C9F795D5695958AD9EBF63D7
6879BF4A99B0E7AE70A587F859FA6AB02F16E27379FBC5344878436F05BE2C5B
EF083A63277347225F6F0EDCBDACB2844CD279716D8FB625A448F059303C3998
53E3F9C475AD1AE74F873586CDB938CA6736B72EB975F80CE8C371BDAC7BCCF2
FEF8C0210A261DAC9264F9767FE9396FBD2461D974DC68D0A93028075BC1FDB0
7DD31F6A154B5490D8D1FF83171A2A3A8470801E75A2276EB60902017252845C
E7BDA706F122CD157327FFECAAF6FC319691A623F1AB688FF87FBAA623DE8832
2456A86C19EE0AF19746CB319EED234EA6940C9B6C404D4932479E48E7EBEB45
D05D92A5E89E0418A8258111779F35FE3B94DAED2909813121F0ACCB72A0FB56
0BC29707476F7DE58D945E59543464ADC9EC7A363B5CD9ED7F3D54493E29CDBE
7BE838835127763100F15AB414EA9AA5461BFA9572848696717178E8D6455EBF
5FF936477EC18BCF5EE0C7988AEFBB9AA05D3952835482F6E74A2F3C7A384137
55F7CA8DCCC2FB4999EFA1B396131757F6532D72C3661E566D6CFFCBEBB24916
264069FE4FBDB8987A8AF5FE9BE9A2753DDE3EC83804DC599682209D1999FDB4
A358529ED1C1C1C85A30D1535CC58E87784153C30FB8A7C1E54CDD8A7B0BC4B8
DFCF71482A2585079FFB50D0C43C64BCF0EDD45AB197ED5CFF852770A44E6E49
184A7C01029121B5EEA37FEFE586ECCF86CAA069FD4E81FFC726E6F54B05DB4D
0755D108AA2EA11153C34E67CCF89525681EEFC7AEA7A3F51A6515A8FDE45AB8
FE20E1807771A2C8C78EE350D3569F466E3941757E98B199BD156464C68C5E56
12C9671510D8B358A40B2812488FCAA046795C4CEAB1973609A7312EE7E49A3E
D3A55ED50727CB0C38086742CC9FC13DC54C832B129C6D2F7025A9A52E7C6D6D
B44056E95DA7A21E8EE134F52D49835E1A897E7EBE013E5A948950D12FA279F7
5D46120B9B2FB08DED2A27934DA03A85ECEC2DC0F194B209B3639202036D39DF
61045918ADE7B87AA33E42F1008633A9C8DAB77AAA9B4BB8637EC7AE03C3A5E8
C6EC447D83AABC74B3F3F89D11F3982180C73193FE248AB5D698B33C21F3F3D4
DC3CCBD735F5E848135C62CD131EC19E447F8E185EAB0B18E9F8A90F4191B2FA
33F8A5381A51F373E941EADAB3C24FBADB108A81EBFDE0313CD421C4F2F1F8C2
89C4CB148EEFFBB719845B172CF24C20A0D1C9ECC8CACE82D0A7FA006388B915
96A06649DDC11565A6EFD6B37EF91967AF1CDDAF49D6664A295F4419D643CC8F
1342F97390C911424D6C15C3585B4D9D4BDBBC9C4507DF02B146CA120A491C31
F98EF3E4605294773944A2B6234F964715719B27BFBBA2803CFFC6C84162385F
337663DD345408A81BDC0A2A56FE5C04EC8BFF9D029A572A66FD25E4EDD41068
6E5BDAB3FC0438504E4A94FEC73669815B36AC99E924BD35B3786A78F1D00496
857FEDC10DAECF7862664E577227B6E19D3F215C8D81410F813119C052B6EAA5
03A523692F6043E7D20B081264AEEDD0BEC18D244A8C9F454D370DA8F0790313
25CA239C077AE34E53218FB837E7B6E3940300E033B3C99F680260DEA3E87672
4568093D2D96932A798FF49D4FA6EAAF6066654F5EB021EB15B7A26CE0AE7631
B5E3837197CC04ECC77A7FC8E6A763CD150D4176D8DF5D2ED7ED7B72A8993987
76E61268688B2F182B11DADF18A393416A86F976D7E62C931AEFD85FFA09528F
E6E6EAE70E6336FFE12D309A24545D7DF5E6D6F66533698DC151B3287324DFF6
4148B5B130980FB36294BDF9384546CD1455E98A7696168BF96FF8B1ADFCEC2F
0F4B7B82AA179727D3353A347E08D5AAC545FA14D690FE87FF6A523C013E1ABE
773CBC3661D002AB19585E02B0FF3CE5781950EE97A586B024108A1E53B3275C
90D1B145B38493CF67C524702A8F074E52F2D5209525947CFBD1D90A82EEFFFC
C8ADDF85734B3437CF9662EE86C30D09A973C4190A3AF1EC6DF13854712FDB81
0569E060FD35550469F4584D9684F502CF61A06D485310EA9A9B88EA924090D1
CBFC4ABAD2834D9CF2E0E4B3DA5641A8435066149DCBE4FD1876DC178AD61928
9B228121B309C8AB8BBEA2FBCBBABB9AA29EBC2AAB18B50E228505EE8EB72491
7753088DCDF88951B99A841CEC0B4DF58DF492831E9B1464A9070AF2FB27E28B
92C1D85ECEA90E68E24B5EA1E9C6BCFC2118A2A8F09826DAF85399C805ED0F0E
E99A78391980EB2CA0828808A5D1DD616D6B47916329122C3B92BB92C3855DC8
8B9D4627C0C1C47ABC36A6AB34E5FCE7681D9B46962F2E479F73EAB95C087219
6B9AFC30B317EB57BB11BA3E39071E15353EF850791DDF81662D8BA0B9143D12
75E607CCCFFA67B1AB5C4EBF2C58979DFB8CB9129FE49875A41C354AD5010782
0424E1173669A8A6480135B7D315F540DAF3B8B6209DED7FDC732DA2945FB1DA
470B4CE2070E97ACE0B3D05AE68D9877C5D9CA00A9BEA3A23271148BE4D5B2C8
6A8FA9ECE135CC8E81A7D71DBD12A7857D934A8A7064DEE0E9D8860E78086CC4
991C09E938354A0FF1D9037F24BEC0CF7097D19716BD259431A5A61171D67C10
2BBC2A346F2650B1FAC2C2FDC49C628C86531E9DFD740656164605AB2C798A2C
F51A1943B8063CD10932FC7C06997424B7D9EB0C026B33B0D3A2166DAC08074D
B47CF7CE958BBF3BE4F64A28A14FC712DA622DFB280F54709BA1043916E9403E
4BCF347622F3837304EC5FDEBE556F5B64E53D7A386DC8B91358452689E5819F
9FCD6ED384675ED26F27EDB7D3B8DD91D49A065CBE49719EB45FC02DD63F80DF
647C6FA131FBF5EAD2922C81D19199B92E6E63BA80E9AE92EF0D1212B1E64028
F8FFC6DDEB702F16AE4C187FBFDF71021D94EC9526C9D0965E3DF2BC5B6F7C73
EC6DC35720722C69645E7468EEDAF3C1737085955800D2C68EBBA26BAD4C8C1E
195236B1477AB32753F783A61999574106A8572528C6208AC3942F4864581BA0
53C282E25AFD33DE7F7280C5E0E9BFDEBCF58DAD1BD8C209AAB55A37ACB4E0A7
8E0234EB24527A306A3E2B5F69B48A147646AD45F956AD78B6395B87FE5E1F08
F05DDC885A1FC5FE18BBF95DE7945C37B323075EA030A59617F9FBA5684EEA18
D76A7B6B08C2C2B9AE44B58F9DDE9AA52C55DA6D142B1220B1D42165B7B58B7F
38B1A93BAE57BEE40ADECDC0E36EF8806E036E57E7862FAEEC41AEDE5552B46E
53CA6BECC3952C1E6E8183A23818AD088BC7191A40BF07D080AEDEDAC57E1924
9396DD49571C0BA990546DB21D444B49B1C0AAE1F2A93B92CF112189AFA7C2C8
CAE186DB9A10362615B72E337865CD47A38A540A0C4E8BD6068104FE499E34AC
C23303C77794CD2B6CE4BA2F7860DBAE5C2A686F038A6C4128F65724C00CBB44
4BF2DD6E433C43BD8C7908E99EFF6EEAFADA79D447CA582E60E70E5C5D529660
58AB15F8F54713C48F34E6654EDA4408D5E80E91968667929F8FD7F4E03AD36C
57FBA6A0E30E46F81175A40DE56AB52C2594FB63F7FC395A372EF115B8B185AA
9207C51C1D7C4B9C3AB39FEFDF2C960468100A1132AC146DC646E7F5A922749C
D748149C26E2AF047D326D8E9CE647DF4C4C6CE1A60CCE1D6544668A511FEE99
0DA3A11224FA9A23AD79BC8009820A9D7383C10F6D95862C69FBAAA104741DA5
585B54FAC04CA3D025CE43065942B387C90993932C9E0DCA4F6BF8DDA6A8CA1A
20A4B6AE0959BE049C7824BF2E7F71EBDD39C32B26C0670E760952AD5C167412
BED78AA9195F3DB251C3387E4875115E186C0044E8D49EAC202FC8ADDDFADC26
79967B4FBC0B255203545C01B214F8739E65121B53C83E7B9A1A5E93702AC2A2
70302A91FF2323DA23CC1ED63C1CC2550C587874D9515CB3C0F1B44A1151E2C9
1EC4AB3A569E5368A1D1D8A5D5D9B89D2125958EB4E7DC515EC43774D24BF2F6
C832E7EFB98F96274540FF546B2218A35BCD8045E539D01F59EF9D1F2A12D10C
A06A9195E4C6C780C0174E6AF45769E5F9969A64D20FC15CDBAF370AE66008D9
D26A5C91ED642B5C5C22E4F97F0E7745B6E7E377278A356409B845B9B1BF187A
64726133522021C141B2283FAE9E4BF828F0C2E9EA10B3EB5B1F9133EA4A4069
63C13FACD44DC2D138852515B760950C9A10F021AE1A8489436ADDAC22C36C93
6559914ADF426FF193765CC56A99128B0A67AAE0467A3C96ED908048722C60CF
ACECFC9BA32D69FF8DBEA5BFEDCE2B9F9CDEA3CE24F436205E60F059F014BB19
6015A095A36EEC56C4F4521DCE96F7304ABEEDEE9C2DAE7E6D248BBFEF50AAAE
9001365710925D0597110D83A37A73A0FB86BD3C097524CA06DFB9525B41AACE
2C46EBF914DE20374A8A4D0EC2EE2B540BD2E3DDFACCC394EB4E9F4FE8DF66D0
E3DC993DC5D4159D00085BC4CB5646EC6FFD490A8E8D750435B225D23CA522C6
7D3AA872856B6833B252DE228727571A18DB30AF5F3A033AC493D04DC5321E93
639B80FABF488EFB2449187524DC09FC9C27F7FD33A8F7A95E651AB1538C93B7
69BB09BBFFFA0E6E706F84EB31375E7E07AA69625CD4907F022225B17BC1FB68
ADFB7558DD9797D28E76B0855DF9ECAADC4284CEC62E21E82F465D0DFEF3B821
08456EAE0FF8E22BC478223E8C0E0CD43066F947D41A56658A53F0C24D0AF11A
161E21A6AB4CAA2CEDB1EA29563D04304BD5935BCE99B671F1CC3D0C22E4B2BA
3E73E3A0C6A574B328F0651D97514C472AC78E697DF83922EB9FF7055143E6A3
BFB5CA86FB0C8CAC688BA09F51112B4C93CF0C156F51920356A5E33226D8ECB7
3CBB8526C78909F0731ABAE42B05FB72AFFA16E93C1F23A619F93CC946D421B4
235308F7F6F0DD72850E817BBF827DCBDC89FE380D815E9A58420BDCFCC5BF26
84D152D269FF97A630258EDB1EDFDB8CCDDE45B0B9137C8975A3938AF342DD0A
84D4963DC486C20E8E939BCF4B3E803BAABEAD370621D02BA841A28CCF3322F4
5574FBE8689B65C58E898A02FCD01C0841E6D3AF64ADF609BF9CA1C54D3B05D6
0B0EB6EA44A0C27A84858D9BD0ED7AAA3C9BBCE570CAA2C9472BFD505F393518
3C17752F1DE829847D16703A9DD283640F5CC82B42C73D588F93D21040CBA46A
2A1C303300612F0312588A121DA109BE546062880DBC2DE73A07B64835A7EE70
4911A9C5E9DD3F7521BCE86FEFEF43B1B10C8C5E3E2B1EC87E54E2B1DD43A45A
A7517FF34A48F815BB15250EE5F9B0FC462816B5FB82279C872225D80245D728
82BD981DF75D8A3DC98300E2379734E9F49C0C8ADF4AF99C847E91864D2F60C1
E939CEB4F91819AA41435DEE3671E793382B7F1B2ADF3AF03AC04C151A69B59E
69D6C55924D365169D08392FB590D91A9A334C7A0252255CCA502776440877ED
13E554E906513EE30FFE6EEB7BAEECE62F49BBB48F381A17E28852087B650DE0
11F5D0EB243F926513AD32CBA070AA94EF075EE7F979854CD11DE3D7DA1DDB02
1C299FD644AD1CFE6EB8A94151C7BCF633BC9D6A33D38AFB5B44EC192B538BBB
DEEE31883DBA8B465207ACEA1E0D2ED8BF39EBA8AE1455A1FF4C34ADB130C634
88D316EDED0443EA77ADB3C95CCE251E8081A56F679D65D6F7150D631E0B79DE
3A32E828B2255D3C874672B457D8FF1C5611F5B342B1553FA2642DFCDE99A053
213ED16F3A3693F8999E47D2C566D820C35920172A11EA118B4F1CAD0B7E98BF
55BEEF99C0EE2EF085E729BAA3282C78EE28FD1B2F57B6DBC90FCE05CAE80545
7E4DF768ADA1364DE883B617F783C27A019910E5FC41D21A48D20EA8C24294B5
95BC2C94AB9CA573B3DE314C39C9B660518C4EBC1E89B8F4DD77E645F584F7EE
5667075A261EF75C093AA734A243D6F3D331C2F86E9A044DE3BBDAE580D9FFBA
C5936F1E1041CC33C9A2017FFB5C007D08F39309DDAE70B88923A83CE875FF34
89FADDFFBC47882B0F70556398ECE38DDBD1DC6DD1F83FA50A23E75DCECBE0F4
6E75388867694AF23238CBB17609E86E93B155D243DC0167B40157AC9C085996
B99730BD1B359883C98733979E413D4DC7A529155914B1B6F9A66664C1229665
D2F728DCE0876AC20486F7D845B34A846D87549A0496F465D00F0766E196C29A
FC5B2F0CC212018416BF6C29BC51B4CBB8CA55DCC5AD6FABD9A7430266BC78DB
5D19765177836269ABDBA9B8DE945B5A67DAB25B8A8052AF673A7E68055997DD
487BC12A5673A11BDCD533964E6F75D40A38ED421593140C6E7B4CEBF2B60B01
4CDA35ABE63AA39E10EDE9BD4468E48B42322217B06ADBE48EAB7D63522C4EC1
9F9CB5EC916B7738E3B7091443BCA512BED90F03DC4316C2B556CEBF444976F9
F55ACA84764A0FF31D66EAF435E5EE35D08541CA776AB546E32483E0B05962CF
342E0406D0770CAC5D0A50E142679EB8E48E37988226D1D7E825A732F429C90F
F9A50D9BFDF85DE8F0EAD77BF5C0D54167E37CA1A49A7A8B565A417177FD548D
2F87DEB754768BCDA1771DC481C61485159F387A2350AF4F5216FAD04395541B
BEDA0F7BAEAC2334609D8770C72525A5F58768A338D4D1C810E49CD8DE2762AD
606A953E85243886AC1F48BA89F1ABBA08949FD4A6A7CB72275E476AA4BB9B27
260459EA0AC3F21A70F780ACFD1283DF00B31802F542B05BC7A840041F95ECF4
787CF3CEA387543950784B9F4D54EA6C174ED926DE4D2929069BC1BCBE0FBF7E
1F74D7E3DEAE350EF8EE37ED738DFEFF5E07930508062896E6AC86FE62CD0E77
E5822869341D3C68727DCFE7F851542F1F4BDF5263EEDB90552426EC6FF2D035
67A5650DE5CA3D9B3DA31F259F8438E1A85AA9335BC5A484217F69E4DB9F0C9C
5EC11281A6B2C8E519F680C45F92934CAD6A4CA83B89CEFFD68D0B345BBAB4C4
114AC792E9FAD2E16A7A41B98D2291FE015787E88C8C1E708AA61E2521DC90A4
1EB5D9D2D9D2F428CD1BCE2A23EE2EEDF948175E30277045B2C3FAC1B04B7392
847C1250924DC41BEF8A04DD91983AAE513F2FA06CA3AC370D7E871C4DF9DB94
89F0D9544C5A77A3DC0242C2A5156487398381618CC258E5388514C3FB86F3DA
C057B3DE3EF7F242116CC0EECCCC9AEF6E970C579684C5237BCB5A2DE4090053
312FB3810BA076B3791EF06DEF31B7E6774B033FE404EB840AD9804EBFD344C9
E52C1A14330AA2B65D50AC831A92B481CEEC9888EAC26A108C4BF7E4383BDAB0
EAE69E7CD6CF4F1209D93B13754B28DEF7A85AD84D86A3254698EB1C795EAC6E
CF5896C15BDCC3F40C997AF67BEAD14FE0EEA4527269CE339FFB75D5B0D695BC
8A0A00E5BDB06662C7F8C41449366E256FE3829E291FF61277897E85955CE6D6
888C5620CF7FABC12A53FA70FC6DEE052C0CF413F2DB6C2CDDFA5E1CED67E997
FA398FAB23F0831C5E2429F3979B5C907D7D3AD207BD85FA092ABFA7CDBA22F9
34FACA4FF66D96461CEDF093DDB9379146DAEE0020D0F9F2383C9771C9CD9195
3C0C68699535E1F8CD6AF0BF1449B629C44CF2F973AA21A22A60A1B4EB7A0F6A
0F9AB90D4514C2A7E11ED4CF6645B3872E550EF3D38D7BD71BC9250D73D2F2AE
EC7E65FFA2B128E399D84DB1CBD1CB884D5B33F8A6F26D21F3EA5AF6A7F922D3
40E302ABCCE0F99B60EB971114327B91894D81CABE7B4B5D092CBFD6F6B542C9
A9C52F133F623CC45232A70EA715B2D4AE35D38120D6A8F0BC82B9CDE11F44C2
07847916896A5065CDE4682C2D1208D8A61058DED9B03AC62A441944E518F247
365CE09C649F91775A2ABCAD213F4574ECFE8BF866F1208FBB6D8BF73AA549E2
68C348E540355FE84CE47DB3FEC072AC832AD476235188EE19D10EC17B3A6072
AD900D0381838F0DD74D587F00F5A2CCE33B4DF4649F952DC4568238E932ACBD
48EBCDDE1E784CBCFBAC1891D9D4531686994976840217953BB376F043E24468
CCD503704EFCF59612350106B82DB14064416ADEFE9BFEB9EF92BD91B098EE43
84A76D0F7529463CC03D868B53719D9D11827969C2604E045678047830CA0640
940D7A190F9B294BB330C79FDA647AA0758B12A8C7BC14930211E10F955F1E71
84CB570D912B7551DF11D58760C5164518B6C6F1D96B33884515168F377FC73E
9A55A7E8424428803BF3469A02BDC24E890E8F317A6E9D767B91BA49A5CE3968
8BBB797EF8BED214E2CC251136A1AC1F07971EB4DA491C896791585F7BFF22C3
6F4619015CE6C6F8ED1937C86D074DBA6A618EF552ED37769772EDADE51305EE
CE548CF409078DB21D7358F24B8634D5B91D3B42E261AA709DF3195C5AB0493C
C9DFDC90BB4233DCFF93A3A3160633F1A235DFC0190F155707F7EC1FF5BCE8FB
ACFF15BBFF45D73044FC117C7D4296B2BBA6296BF3EC05EC42D197263D465C57
72A46C8AD647CAFD0764F0E3A44A1D5BFEDA1D3D166BA4D1DE9A71B9FF6A923B
85625E6426BBA390C7529CC6F9C4CF1179F165E2F8A0C5B6CCBF76FD480FB920
5CFE0A27F2B44D54320B324B250FA53A1EAA58219CE55248EA5A6347ABDBD7B5
9EF6D1753EAF2A81CCEB0FA82FDA0BBD31CA96508A97D6D5F6D271D659BA2AB3
781948A7ECCACC6095AAA80A290AC1A48AB91381B840EA1399942CA1D3A09F5A
DD3BAB151F68CE96B2590F1BDC54DCB9A29F878AA85087C16768F7C2FEDE8C30
74B9ED151D5909C41D5D225D86980A365A720BF4DA6482DDA28F84224F6EC1FD
AF0891BAB13C14A611204B9A640E642225603F5BCBE1392F7E9A9E9FF66028DD
E517555162B087F59B3ED387C8276F20FFB267F95A23A8769139AC08245E02A8
D3F17CDD857BBA173603DDA28E8BE307D9964B1D2412179084AE28FFB29D30BA
DBA259804C80389DD364AED95B2C4361B9088B76374C5F2DF7FDFFA8B7F10A6C
59990B356800944B60898E7E35D67F3934D52C1BF1C46E8879EA2B585AF3820C
15D26218369B6BB2A05FDB4818BE54E5BF380BB7A4FDE64A8EBD1A1725006C80
F051ABBF11A888BA07B5775AC30F2D6A97C5FE2E228F8A473ADFCDC2ED96C0D9
45B7567BFF9F1EE711BE45E50D3148A47174CD9DDFB01712DBC475009633EC68
9377BE94AC16126F48EC9C5739DC2C21075F8CC060ECF517AF0EC71FE03209D6
AC6ECA7F51833DD3C92D65CB7831D14BA4078C5144EC436CA2005EB7358B06A9
85000139B8CF23C0A75EB9B66A2CE58C546712CE03B7F069F2DCFE8A9F836D38
47DE161FFEA40C46C4A91267838FFA5A5A113F3BD64B08E9208E5E3B095EE708
23BAE3CEB944BA958C45FFABE6D9C5B533C2B1CB0C3B465FA87F6F39AF5D89C5
685B99AEF165D4C45646542CAC1E0A4D66ADE306049710531307331AEDDA222D
5F728166E457F55D0C7825BA4AD16AC45B468598AF217E14A396A03E3A6D3DA6
96E865F64EA4A6CA5993B24A59A543BC7F5741D884D676F11E8CC3AF2B5D0118
CB9C0759C34DA828732E26C852390F819FD1454E4E5A57715999A7C71439E641
C70BB7ECFB4E258907E929EA61B65E752D2148218A8C65FD3791FBA2559A7186
7D37015410BFF0A989143AD4346D8E2A38B12B23DEF71243DB1A857E6F6DB6A1
04D01F39BD548199886029C3427D08D15A978DEF8F7A2DB8E643ABA5EF2C3B1D
EEAA6FD7D9C6975C8C0D455FA4C1AFFE558ADA9C55559F2D1BF4AEBF4F9C292A
1FCF575BA60F27E5AD026DB76B78629D621C5BB0551940DE0CC7CA24B78CB0F3
AE568A002319CCD19CB6F9ED4B316E994DEBA85DEDB0D2106D3AFC99DDD16C4F
2389D8F0A2370948D1FAD82195E50AD4C9A9D93F06676FE3D722DEBEC56BDF01
485E70DEB17847B6127B07F415454BF1A00BFFB410BD7225098B78D7553CC559
9BCCD0AAF25862AB1C3DD8A653C1118EBB60518E4136A0C72D822E752312D6B7
E1359D9797E3096A1E0C4C7D5832E7816ABD9FEA664DFD653F07F2032EEBBA47
3E5ED37DD7BE26CACF25E989752C1FEA466F0A19A56ED0E2639EB0835168957D
7BE3E3F31228ADBFDDCE6A69F3F46EFAA4DCAB6267D7C58E87526BF6E6A06D04
B894937690FA8D69E9726E5C6F6AEC94C9795DD0813D916098EBFFCB9E1F73AA
E8C035AF97E004F6E5C6D943968920A668C8C00E121736B6C443D2E03F5E6461
51A532C1E0A08336D5BA6E0765475C881104B13D360AF59EA40EBD64287DEC93
EA4C294245CA7704D48E99FE1D0C849C9E0E1E044E6826B68045C3E99B475474
44BFFFE4C6B437950124B4C53AC4D804731C0EA31677C44CADB5B0EBD8F70E47
14456238843115EAD3CA507FD06012AD089CC9FC6E448212A7D63D90AA20735F
C017864A1E08E9D1C0D28D029ECF3844C65157A9BE27E7D95401D06F4A161E3C
92E85D9E8342254B0CC50988FEDABF2630619ACA996EE82E69F82C143049ED0B
B7E6819070D1148DD29D0E21657F104EF92271BADA59C8EFEC10A60D256658BA
B65184E8A8E6674223698374283102402270B4B4AC716841AE889FCD02E5C140
FDC0B7A6E6C39B26C968189516CF242CC5B4A21837F1DCE16DD5B4262270A810
80032F28AF56695E96559F88F6050FD507D73D2AF74FAE7EE145E0988421B3EB
76B3A22C9168BA14D900175661A30E87D5A3B21F8DB8C015E521B003DAE2B386
AF96687BFF375291BB4002C68F116306ADB51151252004A13322E605884098DD
EB9710039ED91ADE3AAA8B5D4822FE8742CA496A911B9C7A6F67F8D293B4380D
DAF9D3453B31736381EC4ADFC95C6E6F6A4EA6334964C7EEB20BD9708372A371
375F3D03567FD6075DD12B0F47B7D07E3A4E51A4412E07C59517E93B2F050FFF
C8B36F11D4D7EB4234CC9051849CB754772FB9D786041949BADA844520D91FFA
0C76362B96BD360ECA39DE983544D21C494357634ABE5F2A6DF5E25156708D8B
D87C581822635E797EBDFA64C2E4223D30FDBC95C471B0D8E43083751CFD319A
5AC0FC03C8D3548A00CC16B9E7B08954962A12D99D6CEEC0AEE4B6F7E3991E22
C5ECBE71B2381232763C86914C0AF2186A74F3207FAD29F4A8FF71AFDB6AD8D8
CD1714D52D8CFBCDB0CBF6B42C5E1C208DDFD07F5AF9F9013E8614A32D2891BC
66D636B26527CC851D5890471C99742097277E97F2BA8A6114EFAB7634F3DC0F
FB614DC737639CE23C45AAC54785C8288681A8E76063DDEEB93D8152F9AAD856
69F2EC5CEF5D3B348BCD86F7D5BF8C97F1A66050C1D46D241D570B52B543A256
ED83E536A08121E38FC19154844749065C645FB7907AACBDC5D73537772803AA
82C42D0B71467CBA987D88DFCE6AF8BDCE77BCFA005E799948B9382CD5154FE4
31FCB3CD50F6438305680500099CE3CB62032E901AA99EC2D8B61AA3685787FE
CFB84714C604D87B8B5384895F3D00B54991BC877B32ADF21905CC3DFD7C11AA
B953CA6A1F78B361EB6686F6AE97EC03FD6C3D8D868B4CEEE104A6802FF867BE
A2D00F6F1B461D759F1F507EF714B7EBF39225D2331C86671D8811F9C751D640
41E1456C000D6C7BCD77C41FB7B7E4C7817DA24D35BDDE19CCE2C27BB651309E
CEB6836B29775735A416D37F49F902B1F632FE3ACCAE1DC1472D3E750DB5ADC9
82552F4243440C7C7730C30852199B108DDAF95501BC36BCF925AD62BB394371
C1BC4E044B203793052F22C695AECDBDA77E0824E970020A0A86C674EF859E35
266C2935910D3296F0ADEE5543D9F6B7AADE68091D98C7EFADABC40B4AF4BBF9
1F2F9E87937DFCA2DF261F22FC8C7DCAE8BFE47CE8C65BFD2813B5DD14D8A3C5
FB8C65455DB6AEC9140CD6B85E765F148F6327395E64FE90B0E967AE961A6E75
B6382A65ECE88EF6308EE98BD926827A9743B7AFECB39C501CBB98725F05244D
642670709CB6939D3E185A555F9584E4D3F4C5B16F7D15EF735CAE5EA80405B1
5147479E4F2328D8EBD184785E2B139315C0BAD2AC223D766C10D5C68F8BA765
140004E952D6575AB2B213E71C7D22AEC9505B611224DB65857915DEBCB5C5D0
6C53627629C5CB27FF9A062FF9F886BC23346A4B83466EA80DE743C003469B23
FB366EA9D695FB6FE3F77DEDB379EBF65EC3F40C27346E311D4893679404BF23
B146139B7DE548A7F1C97382504CE1A9BCBB6C9E1F94AD5DB2A7076498C4AE44
E7FB133294046D710C65EE702057D9714A3F9F0E0966C11B3015E0767DDA88F7
6F7400C3115F59C8ED46289CFE448B2E0BC19835F7F6DEB19EDD3EF2FA228710
2FB9045B859220126D2B5AC60C67CAC530D25A0FD79E6434C17C2C41CDEBE625
F75BE61FA9AC24FA9F9F48CC79C30E80A63D4D0DA970C40D8BE6152C24A4D40F
C6F972DE2342D1DECA7DE7617BAE76EE7F7EFA9A7D57B366F0B0BA6F1A5A6877
7513381FAE278D2BE9C296E599B7E34521E1D1992CF48392F27511F3BD153280
B101C96E0035429C7A4FFAB869BD091371D2AB6FC6168F31412202E5D18764E6
AB22E8FDC78F98CB94AB72C012182580546B187243598D95E992BFE2433A9DE4
EC30E55080747F87CFFAFAC5BF7741D8F9D80697ED5C394BD0A75E366596FABB
1A5DC8A873B6890813270024520AFB466F8622FEFF45F0C8D65578AD9A2A62F6
C888BAF3C5D1096FC6D2720386FB09D82EB7395F7A4E5F69A11C8A8FCE9C3E56
4C4405A9C7A3513F49DA21E348ACCDA77C3813FB04F15F9C71ACEF93CB3D749E
ED3556D3E8CB0EBE7F2C63D612DFA50264AA99D55C83ECF4DA48999AFD21504D
EAF177174AA02C243ECA7C911F254F148A559E7BE5093938B7F9E6037D0458B0
A3DB150DC0F0BC49A60B086580CAAF4CC058D66E073451103F52577B70D5232C
7348A18AC077F8A67AF5C1D2D7C020C1F7CAFBABA62BD445E79F8AA220DC26DD
AEEC9C0B2B08BC4B98753F7E9209B287426A2A019A12A79F1C8C68C50EA28E10
A38C2C05733A8B130DFC8D272A8FF50FBADAC3CB414A3C1A7149F59F7C53E1C9
EAFED9662B088E439BFA452F65F56861FCCA6FBA779D43E9833CCB76B8069D18
B87204EDCB6722DE3145A7BAAA3CC06217169A649853170FF096589EFFCB409C
A0DFCE9EC263DCE337571DF1EA8BBC910C71ED3769DA0349E949F24C17CC03E0
E370D91B3BF3F97858576320A8770AEA8F2788A94EBA773B1B475AA27AD2D715
19318AB4931E679CDFDEC9795AEE4C8FCFC2D177E85701BE433845D866223526
DD427AF430D655324FC997401762BEBBC5A061606E3AF9BF2B08840311063BF0
9AEAB91DE0AC5EE69BFBE57D82EB0E274A7634C1B18E82E534632B5A9C1260BE
DF61F80D919DDAA654E0B32D717BD1F41CF281EAA374E2B7633D0417F027D978
C080959E882C7CB42E353308708B1ED7BA58D822FFDB15BFC24611EAC6AA8917
85790C70AD3EA4278FF3CE22B80DD01AB3035A31ED8B6DE3445AF42F7CD97A9E
A6DA52F0CE484EFDD918B808A1975978A08830485C034B20BB41B058A84930B8
B64931B2A030121FAAEE7E3E2C70EEC9CA7DEF575A56F60DAB88B121CBB42747
4A7A10176E1E970216B636F00CAD8B75D1770CC0C87E09F81F600F9E17096A68
F4AD6FE08820335EEA7F80BD98D095A78DFADB8952B01A4669A44B08E6B5EE40
FE28DA5A4F3CAD5CE39485B465A7AF2733AAC8742DAD6DDF26017196EF4C43FD
09155FFB19DB481BB28E309282ADD55DE19E5D3F20A2165B1CFAE683A4E4D1F5
5C7BFEE91F5C5E46AE2B6A9CC25AEDA17F9CED1931E5CA551C24ED217542ECCC
4570D2EE166AF6A4372F56E48D47EBB36C2A9C9726CB4D11F85B2F4BC3B3011C
7405C957A48D2A8FE506B1A5A76BDE8E923295F9970639925E9674867DB929EF
18CFF0739F3BD14B3EE03E62E741D753F4D1724F862BD7928510EF5FABA7B8E7
E9BBCA3FA977A1EED0EE8507E949C5458C88D5422914042AC74DEA11666ACF99
E464CC80CDBB02F435068DF6ECA81BD7789A9EDF13788A3BB1DD712148049B06
7B9A600317497B837AF070F5E5555956B160D35468139DFC330F1D05C8545DE0
3FADF56B76A6F8E07DD54BD74EBF03CA7EAACDA3A47886515219A4D79DBC113C
FCE5551F91221C60F9105E07B5C6F1BCF4EC6731A4A13D90CD048E7ABA7AC0C5
7C7C5CE02955FB8D28477197395AB104BCAF4C0CF463984098301B643FAE8A9E
F8A4D805DE73438BA4EAFCECBCEF3A630C2EE294498C1736030821FC3EB72288
89D6EDDAF0066B12D384DA9AC16CFE522A6B7B2990C82543089F4073B21A2AD6
C60C993B26906920B1AB964359180415609F5C5D5EEB8E518E50F8682213BB6F
A7D9929551F54A8C124ED60EB606E8F7BC418B5E802965D7689B58B0336E1D16
0A1B4EA805197B5E23C15E84BB047984214560E4DD36ED5C98B9A49100FD4A88
C6AACDD16C7F265EA88C0EFF2F0E6EE455C84E4135566662D52FA0F37DC672FF
D9DD32BA9BA5F395EF304DC9DF77C0842E1EB9D8E260967690B069CA99755BE3
EBB20C88C6EF173165D14E3677BC85F95FD7B39B677D6C989A9A5500FA51573F
4B39C9D1D79E28636B610BC4DAC862388F5DC42DB4630A9A7FA089859AD0448D
02A4B59D90C562042FF7DDDD98C2A5B7019AFBD51B5D01AC2271350260B98C1C
22A380AE4975433D281243715B8A2D867875B6308C7A339818D8CD77B6EF1E17
F5D4FE5B03789CF18EB58CA2FD2BB2F3FA7175B9622928881E9A2E12C83E6326
1A79C41945C89A4357C117C8C2A6D5D41FE909B7B3369346953CB21BA449E27B
965EF92254818746BDC9DB236C68A1466DE77010278B83A301BDC84C09906AB2
78EBC240818066AC70E2D02A81D2F71AD6709CC9842099816F01CF077237BB0B
9E78CA497E00AF2082D66358A153BD682FACB56133E4D86B630000302FEC7512
32BCE1A8E8A257250D72010621876543295318EF96EBAB5C47DBD74577A463F9
8BE19AF69E3B5BECAED8676389B2658060BF4265D0588B6FF76A82620284BD00
7F63C8EECD94787F5007D8D93252092BB9E392CC18A40F2E300CB3F5B0385F76
DAC4BC406ADA796E616A8095BD70E2F7E37925101513A618104D8C9BF338FB23
AC1028D26B4C22D9437BC512C87DD52A13A53D82C43CE1594D4526C408D73C64
89F5D5C068014F9E4AFD9AA52DAD86AB21E40FDFB9AAFD9C50BB868E1775FACC
FC996DA4E28217734C30BF2A73618C4E7F9B179CC1F35E57299508339C076AB5
AB0B93E225DA33CD061FE0BCAB34B6068ADE18E472AB02322E5A78ED96E28CC9
F3CF6BB633AB525390940FA107A0CCB8DF15BB555B494B426539BCBC8102950E
DD99F9BD9545C6CE8A4462DB56E1853A405C0A4970DC59F8D42B35DD07DA0F3B
D4EB6202064B6372E4916547B873C6FD81FC0AF9EADEDCF97F7162867367670F
B3F46DBD3283A11994DFF5945692537CD2F1DAAE511F4283749BAF3595E66F58
FF44CDD77D86FD6E9E0B9D74617F0D4105231FAB4FDB76263E8798EF6E0584D2
AD9C89DEDD46B99A83EFEB0761F7D4DF2B8FB51B8B818EDD19E8190D05659D1F
08781BFEBB8861DF9117912C0D3216637A049A9C4ABD62D1A4F51303D6F74DD0
5F4EDF15A1F1DE9336F3B9A845518CBCD569816BEDF11CCF3BD72A1F02E4155B
1E6DD451B7C705B10D9F30EFD92B9A8F0BED00FD0C81D3963F21E8D4657CAA7B
F8F920CC6DADB758FCB27BC486F5187DF02FAABEE480FB973083892E3D5519CA
B2811D5ECA68F6E048816340CE7D579B5E3887D65D2D219A6B09815AC6299FBA
A448CD72D84FCAF0E5CC73837B38D794537FD189129FADF8824320A389F66B96
45DF44CEEC987BA466B20056E6F708772CD9E18F4C114DF1084F0907361B610E
3B87CD54DC4694874E13044E5DEB8DA905020443ECF0AF9BE3B7DBB62658426A
E5FFBE7D6F6FFBC1896DF5E69E106395B1ACA5CF1D8E731237C1926D7AA85E68
D9A29DFFDFF8AC2E0E24839DBE52C44874D54A223B7490BF92FCAE6AAE5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (main.dvi)
@start /Fa 6[0 1[0 3[0 0 0 0 1[0 0 1[0 1[0 0 0 1[0 0
0 0 0 0 18[0 2[0 85[39 39 39 1[55 1[55 83 28 4[50 30
44 1[44 1[50 13[55 2[68 30[50 2[28 1[28 44[{ T2AEncoding ReEncodeFont }
37 99.6264 /SFRM1200 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 110 -245
a
SDict begin H.S end
 110 -245 a 110 -245 a
SDict begin H.R end
 110 -245 a 110 -245 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 110 -245
a 118 71 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 118 71 a 118 71 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 118 71 a 118 71 a
SDict begin H.S end
 118 71
a 118 71 a
SDict begin 14.5 H.A end
 118 71 a 118 71 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 118 71 a 264 2197 a Fa(\315\345)33
b(\344\360\363\343)-8 b(,)32 b(\340)h(\340\347.)442 2197
y
 /PSfrag where{pop(Title)[[0(Bl)1 0]]1 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 442 2197 a @beginspecial 50 @llx 50 @lly 626 @urx 482
@ury 3401 @rwi @setspecial
%%BeginDocument: all-title.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: all-title.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Mar 10 17:00:12 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 true def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (all-title.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (mi)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar 10 17:00:12 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
780 400 M
88 0 V
10291 0 R
-88 0 V
stroke
660 400 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
780 1928 M
88 0 V
10291 0 R
-88 0 V
stroke
660 1928 M
[ [({}) 200.0 0.0 true true 0 (500)]
] -66.7 MRshow
0.500 UL
LTb
780 3456 M
88 0 V
10291 0 R
-88 0 V
stroke
660 3456 M
[ [({}) 200.0 0.0 true true 0 (1000)]
] -66.7 MRshow
0.500 UL
LTb
780 4983 M
88 0 V
10291 0 R
-88 0 V
stroke
660 4983 M
[ [({}) 200.0 0.0 true true 0 (1500)]
] -66.7 MRshow
0.500 UL
LTb
780 6511 M
88 0 V
10291 0 R
-88 0 V
stroke
660 6511 M
[ [({}) 200.0 0.0 true true 0 (2000)]
] -66.7 MRshow
0.500 UL
LTb
780 8039 M
88 0 V
10291 0 R
-88 0 V
stroke
660 8039 M
[ [({}) 200.0 0.0 true true 0 (2500)]
] -66.7 MRshow
0.500 UL
LTb
780 400 M
0 88 V
0 7551 R
0 -88 V
stroke
780 200 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
2263 400 M
0 88 V
0 7551 R
0 -88 V
stroke
2263 200 M
[ [({}) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
3745 400 M
0 88 V
0 7551 R
0 -88 V
stroke
3745 200 M
[ [({}) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
5228 400 M
0 88 V
0 7551 R
0 -88 V
stroke
5228 200 M
[ [({}) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
6711 400 M
0 88 V
0 7551 R
0 -88 V
stroke
6711 200 M
[ [({}) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
8194 400 M
0 88 V
0 7551 R
0 -88 V
stroke
8194 200 M
[ [({}) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
9676 400 M
0 88 V
0 7551 R
0 -88 V
stroke
9676 200 M
[ [({}) 200.0 0.0 true true 0 (600)]
] -66.7 MCshow
0.500 UL
LTb
11159 400 M
0 88 V
0 7551 R
0 -88 V
stroke
11159 200 M
[ [({}) 200.0 0.0 true true 0 (700)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 8039 N
780 400 L
10379 0 V
0 7639 V
780 8039 L
Z stroke
5969 8339 M
[ [({}) 200.0 0.0 true true 0 (Title)]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
% Begin plot #1
0.500 UL
LT0
795 764 M
15 195 V
14 -27 V
15 94 V
15 -58 V
15 -49 V
15 123 V
15 9 V
14 -28 V
928 913 L
15 28 V
15 15 V
15 34 V
15 235 V
14 -183 V
15 -138 V
15 -116 V
15 104 V
15 -269 V
15 -18 V
14 1124 V
1106 654 L
15 -71 V
15 92 V
15 131 V
15 -18 V
14 116 V
15 125 V
15 71 V
15 -141 V
15 58 V
14 -9 V
15 -18 V
15 -40 V
15 -31 V
15 59 V
15 -110 V
14 119 V
15 -31 V
15 -92 V
15 117 V
15 -62 V
15 -210 V
14 -153 V
15 6 V
15 -28 V
15 31 V
15 43 V
15 128 V
14 104 V
15 55 V
15 76 V
15 86 V
15 61 V
14 3 V
15 55 V
15 -55 V
15 -43 V
15 113 V
15 -146 V
14 140 V
15 208 V
15 -318 V
15 697 V
15 -684 V
15 -162 V
14 -227 V
15 -30 V
15 -95 V
15 0 V
15 -36 V
15 94 V
14 132 V
15 125 V
15 82 V
15 -45 V
15 128 V
15 3 V
14 0 V
15 21 V
15 46 V
15 -156 V
15 -85 V
14 168 V
15 -80 V
15 187 V
15 -272 V
15 88 V
15 -70 V
14 3 V
15 -211 V
15 -15 V
15 -125 V
15 -15 V
15 -22 V
14 52 V
15 77 V
15 103 V
15 62 V
15 82 V
15 67 V
14 16 V
15 -25 V
15 28 V
15 12 V
15 -64 V
15 171 V
14 -190 V
15 153 V
15 165 V
15 -58 V
15 -272 V
14 9 V
15 -39 V
15 -172 V
15 -58 V
15 -33 V
15 -61 V
14 -19 V
15 37 V
15 43 V
15 88 V
15 37 V
15 110 V
14 144 V
15 -83 V
stroke 2648 901 M
15 55 V
15 9 V
15 -6 V
15 -46 V
14 46 V
15 52 V
15 52 V
15 6 V
15 -110 V
14 -128 V
15 18 V
15 -146 V
15 -46 V
15 -68 V
15 -58 V
14 0 V
15 10 V
15 52 V
15 100 V
15 43 V
15 144 V
14 12 V
15 110 V
15 -52 V
15 -24 V
15 58 V
15 0 V
14 104 V
15 -86 V
15 -134 V
15 110 V
15 -13 V
15 -15 V
14 12 V
15 -119 V
15 -125 V
15 -129 V
15 -24 V
14 -70 V
15 15 V
15 43 V
15 15 V
15 73 V
15 107 V
14 107 V
15 -30 V
15 128 V
15 -67 V
15 -9 V
15 107 V
14 -52 V
15 131 V
15 -205 V
15 -6 V
15 110 V
15 22 V
14 116 V
15 525 V
15 -663 V
15 -180 V
15 -79 V
15 -159 V
14 -46 V
15 12 V
15 -31 V
15 55 V
15 196 V
14 -9 V
15 150 V
15 -7 V
15 117 V
15 -55 V
15 21 V
14 -34 V
15 37 V
15 18 V
15 34 V
15 -125 V
15 39 V
14 74 V
15 -116 V
15 -65 V
15 -79 V
15 -43 V
15 -43 V
14 -103 V
15 6 V
15 21 V
15 12 V
15 -21 V
14 70 V
15 86 V
15 189 V
15 -18 V
15 159 V
15 -74 V
14 28 V
15 -70 V
15 116 V
15 -89 V
15 12 V
15 -61 V
14 52 V
15 135 V
stroke 4190 1094 M
15 -65 V
15 -103 V
15 -58 V
15 -98 V
14 -86 V
15 -134 V
15 -46 V
15 15 V
15 -12 V
15 79 V
14 40 V
15 150 V
15 73 V
15 113 V
15 6 V
14 0 V
15 -58 V
15 86 V
15 -22 V
15 -39 V
15 15 V
14 -76 V
15 55 V
15 45 V
15 -58 V
15 -85 V
15 24 V
14 -52 V
15 -49 V
15 -195 V
15 -55 V
15 -18 V
15 0 V
14 67 V
15 9 V
15 73 V
15 150 V
15 -3 V
15 116 V
14 -95 V
15 49 V
15 89 V
15 21 V
15 3 V
14 -76 V
15 6 V
15 -3 V
15 89 V
15 -113 V
15 -52 V
14 88 V
15 -150 V
15 -158 V
15 -58 V
15 -62 V
15 0 V
14 28 V
15 -6 V
15 64 V
15 34 V
15 -25 V
15 98 V
14 159 V
15 12 V
15 92 V
15 -89 V
15 21 V
14 7 V
15 -34 V
15 89 V
15 30 V
15 358 V
15 919 V
5287 990 L
15 -165 V
15 -58 V
15 -150 V
15 -83 V
15 -24 V
14 -18 V
15 30 V
15 40 V
15 137 V
15 123 V
15 -37 V
14 67 V
15 141 V
15 -83 V
15 16 V
15 -71 V
15 83 V
14 95 V
15 0 V
15 -175 V
15 55 V
15 -21 V
14 24 V
15 -85 V
15 79 V
15 -171 V
15 -146 V
15 -74 V
14 -12 V
15 43 V
15 -64 V
15 91 V
15 101 V
15 70 V
14 65 V
15 100 V
15 -70 V
15 122 V
15 -52 V
15 80 V
14 -104 V
15 -64 V
15 49 V
15 18 V
15 119 V
14 67 V
15 80 V
15 580 V
15 -513 V
15 -412 V
15 -199 V
14 -80 V
15 -42 V
15 -16 V
15 0 V
15 98 V
15 104 V
14 141 V
15 116 V
15 91 V
15 -48 V
15 -80 V
15 21 V
14 -9 V
15 46 V
15 -79 V
15 -9 V
15 -7 V
15 10 V
14 -3 V
15 -16 V
15 31 V
15 -83 V
15 -88 V
14 -159 V
15 -19 V
15 -48 V
15 42 V
15 -36 V
15 76 V
14 49 V
15 107 V
15 159 V
15 3 V
15 104 V
15 -107 V
14 82 V
15 3 V
15 -36 V
15 30 V
15 0 V
15 -61 V
14 125 V
15 208 V
15 -134 V
15 275 V
15 -278 V
15 -205 V
14 -171 V
15 -95 V
15 -70 V
15 -61 V
15 -6 V
14 67 V
stroke 6829 556 M
15 73 V
15 144 V
15 165 V
15 -34 V
15 9 V
14 49 V
15 25 V
15 -40 V
15 -6 V
15 -9 V
15 12 V
14 -31 V
15 61 V
15 -94 V
15 -28 V
15 16 V
15 -77 V
14 -21 V
15 -150 V
15 -73 V
15 -61 V
15 12 V
14 3 V
15 0 V
15 82 V
15 65 V
15 94 V
15 43 V
14 12 V
15 71 V
15 30 V
15 15 V
15 68 V
15 -162 V
14 82 V
15 -15 V
15 -12 V
15 82 V
15 -73 V
15 -61 V
14 46 V
15 -123 V
15 -143 V
15 -31 V
15 -40 V
15 -55 V
14 0 V
15 34 V
15 141 V
15 -25 V
15 52 V
14 86 V
15 3 V
15 110 V
15 104 V
15 -74 V
15 -9 V
14 3 V
15 -37 V
15 -21 V
15 116 V
15 -79 V
15 39 V
14 80 V
15 -89 V
15 -97 V
15 -169 V
15 -97 V
15 -34 V
14 -24 V
15 12 V
15 70 V
15 125 V
15 117 V
15 195 V
14 -9 V
15 49 V
15 -129 V
15 120 V
15 9 V
14 -107 V
15 92 V
15 -126 V
15 16 V
15 -25 V
15 131 V
14 -134 V
15 18 V
15 -128 V
15 -64 V
15 -147 V
15 -43 V
14 -64 V
15 19 V
15 0 V
15 119 V
15 55 V
15 165 V
14 119 V
15 104 V
15 88 V
15 83 V
15 -61 V
14 -25 V
stroke 8371 1133 M
15 153 V
15 -12 V
15 -31 V
15 55 V
15 220 V
14 123 V
15 375 V
15 1632 V
15 1204 V
15 2111 V
15 -2655 V
14 -1134 V
15 -1588 V
15 -511 V
15 -122 V
15 376 V
15 223 V
14 147 V
15 67 V
15 -64 V
15 -107 V
15 -74 V
15 -140 V
14 -73 V
15 21 V
15 492 V
15 -324 V
15 101 V
14 88 V
15 -275 V
15 -42 V
15 -116 V
15 -110 V
15 -98 V
14 -16 V
15 -122 V
15 -284 V
15 135 V
15 -77 V
15 61 V
14 171 V
15 120 V
15 82 V
15 73 V
15 156 V
15 0 V
14 -88 V
15 -263 V
15 250 V
15 -73 V
15 -3 V
15 -24 V
14 -40 V
15 43 V
15 -117 V
15 -36 V
15 -49 V
14 -86 V
15 -226 V
15 -43 V
15 -33 V
15 -22 V
15 43 V
14 -15 V
15 196 V
15 9 V
15 152 V
15 138 V
15 15 V
14 52 V
15 9 V
15 3 V
15 52 V
15 -104 V
15 224 V
14 -367 V
15 95 V
15 33 V
15 -104 V
15 -30 V
14 -58 V
15 -104 V
15 -95 V
15 -147 V
15 16 V
15 -61 V
14 18 V
15 37 V
15 45 V
15 113 V
15 43 V
15 129 V
14 42 V
15 83 V
15 -28 V
15 202 V
15 12 V
15 25 V
14 -98 V
15 40 V
15 -110 V
15 58 V
15 -135 V
15 3 V
stroke 9914 965 M
14 71 V
15 -306 V
15 18 V
15 -122 V
15 -92 V
14 -30 V
15 -40 V
15 80 V
15 18 V
15 95 V
15 128 V
14 70 V
15 49 V
15 -30 V
15 104 V
15 -16 V
15 19 V
14 48 V
15 -146 V
15 43 V
15 -28 V
15 31 V
15 -55 V
14 94 V
15 -79 V
15 -131 V
15 -98 V
15 -98 V
15 -12 V
14 -22 V
15 -3 V
% End plot #1
1.000 UP
stroke
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 442 2197 a
 /End PSfrag
 442 2197 a 442 1969 a
 /Hide PSfrag
 442 1969
a -427 2037 a Fa(PSfrag)g(replacemen)m(ts)p -427 2073
869 4 v 442 2077 a
 /Unhide PSfrag
 442 2077 a -845 2181 a
  {
 -845 2181 a
Fa(\312\356\353\350\367\345\361\362\342\356)f
(\361\356\356\341\371\345\355\350\351)h(\342)f(\367\340\361)-845
2181 y
  } 0/Place PSfrag
 -845 2181 a 1983 5989 a Fa(1)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
